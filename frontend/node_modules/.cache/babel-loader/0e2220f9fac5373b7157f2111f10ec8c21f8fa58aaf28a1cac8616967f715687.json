{"ast":null,"code":"var _jsxFileName = \"/home/sam_dev/Projects/resume-app/frontend/src/pages/ResumeBuilder.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ResumeBuilder.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../App';\nimport api from '../services/api'; // Import our Axios instance for backend calls\nimport { InputField, TextAreaField, Button } from '../components/common'; // Assuming common UI components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeBuilder = () => {\n  _s();\n  const {\n    userId,\n    showMessage,\n    selectedDocId,\n    setSelectedDocId,\n    setCurrentPage\n  } = useContext(AppContext);\n  const [resumeData, setResumeData] = useState({\n    name: '',\n    contact: '',\n    summary: '',\n    experience: [{\n      title: '',\n      company: '',\n      years: '',\n      description: ''\n    }],\n    education: [{\n      degree: '',\n      university: '',\n      years: ''\n    }],\n    skills: ''\n  });\n  const [loadingDoc, setLoadingDoc] = useState(!!selectedDocId); // Loading state for existing doc\n\n  // Load existing document from backend if selectedDocId is set\n  useEffect(() => {\n    const loadDocument = async () => {\n      if (!userId || !selectedDocId) {\n        setLoadingDoc(false);\n        return;\n      }\n      try {\n        const response = await api.get(`/resumes/${selectedDocId}`);\n        const data = response.data.data; // The actual resume content is in the 'data' field of the response\n        setResumeData(data);\n        showMessage(\"Resume loaded for editing.\", \"info\");\n      } catch (error) {\n        console.error(\"Error loading resume from backend:\", error);\n        showMessage(\"Failed to load resume. It might not exist or you don't have access.\", \"error\");\n        setSelectedDocId(null); // Clear selected ID if not found or error\n      } finally {\n        setLoadingDoc(false);\n      }\n    };\n    if (selectedDocId) {\n      loadDocument();\n    } else {\n      // Reset to default if creating a new document\n      setResumeData({\n        name: '',\n        contact: '',\n        summary: '',\n        experience: [{\n          title: '',\n          company: '',\n          years: '',\n          description: ''\n        }],\n        education: [{\n          degree: '',\n          university: '',\n          years: ''\n        }],\n        skills: ''\n      });\n      setLoadingDoc(false);\n    }\n  }, [selectedDocId, userId, showMessage, setSelectedDocId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setResumeData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleArrayChange = (e, index, field, arrayName) => {\n    const {\n      value\n    } = e.target;\n    setResumeData(prev => ({\n      ...prev,\n      [arrayName]: prev[arrayName].map((item, i) => i === index ? {\n        ...item,\n        [field]: value\n      } : item)\n    }));\n  };\n  const addField = arrayName => {\n    if (arrayName === 'experience') {\n      setResumeData(prev => ({\n        ...prev,\n        experience: [...prev.experience, {\n          title: '',\n          company: '',\n          years: '',\n          description: ''\n        }]\n      }));\n    } else if (arrayName === 'education') {\n      setResumeData(prev => ({\n        ...prev,\n        education: [...prev.education, {\n          degree: '',\n          university: '',\n          years: ''\n        }]\n      }));\n    }\n  };\n  const removeField = (index, arrayName) => {\n    setResumeData(prev => ({\n      ...prev,\n      [arrayName]: prev[arrayName].filter((_, i) => i !== index)\n    }));\n  };\n  const handleSaveResume = async () => {\n    if (!userId) {\n      showMessage(\"Please log in to save documents.\", \"error\");\n      return;\n    }\n    try {\n      // A simple title for the document (can be made more dynamic)\n      const docTitle = resumeData.name ? `${resumeData.name}'s Resume` : 'Untitled Resume';\n      if (selectedDocId) {\n        // Update existing document via backend API (PUT request)\n        await api.put(`/resumes/${selectedDocId}`, {\n          title: docTitle,\n          data: resumeData\n        });\n        showMessage(\"Resume updated successfully!\", \"success\");\n      } else {\n        // Create new document via backend API (POST request)\n        const response = await api.post('/resumes', {\n          title: docTitle,\n          data: resumeData\n        });\n        showMessage(\"Resume saved successfully!\", \"success\");\n        setSelectedDocId(response.data.id); // Set the new ID for potential further edits\n      }\n      setCurrentPage('dashboard'); // Go back to dashboard after saving\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error saving resume to backend:\", error);\n      showMessage(`Failed to save resume: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message}`, \"error\");\n    }\n  };\n\n  // Placeholder for AI assistant feature (still client-side for now)\n  const handleAISuggestion = async () => {\n    showMessage(\"AI Assistant feature under development.\", \"info\");\n    // Example AI call (using gemini-2.0-flash as specified)\n    try {\n      var _resumeData$experienc;\n      let chatHistory = [];\n      const prompt = `Generate 3 strong, concise bullet points for a resume experience section based on the following role description: \"${(_resumeData$experienc = resumeData.experience[0]) === null || _resumeData$experienc === void 0 ? void 0 : _resumeData$experienc.description}\". Focus on achievements and quantifiable results.`;\n      chatHistory.push({\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      });\n      const payload = {\n        contents: chatHistory\n      };\n      const apiKey = \"\"; // Canvas will automatically provide this\n      const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n        const text = result.candidates[0].content.parts[0].text;\n        showMessage(`AI Suggestion: ${text}`, \"info\");\n        // In a real app, you'd parse this and let the user add it to their resume\n      } else {\n        showMessage(\"AI could not generate suggestions. Please try again.\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"AI suggestion error:\", error);\n      showMessage(\"Error connecting to AI. Please try again.\", \"error\");\n    }\n  };\n  const handleExportPdf = () => {\n    showMessage(\"PDF export feature coming soon! (Backend integration with Puppeteer/jsPDF is needed)\", \"info\");\n    // In a real application, you would make an API call to your backend\n    // (e.g., api.post('/generate-pdf/resume', { resumeData }))\n    // and the backend (using Puppeteer or jsPDF-node) would generate and return the PDF.\n  };\n  if (loadingDoc) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700 dark:text-gray-300\",\n        children: \"Loading resume data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\",\n      children: selectedDocId ? 'Edit Resume' : 'New Resume'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Full Name\",\n          name: \"name\",\n          value: resumeData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Contact Info (Email, Phone, LinkedIn)\",\n          name: \"contact\",\n          value: resumeData.contact,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n          label: \"Professional Summary\",\n          name: \"summary\",\n          value: resumeData.summary,\n          onChange: handleChange,\n          placeholder: \"A concise summary of your experience and career goals.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 dark:text-gray-100 mt-6 mb-3\",\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), resumeData.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-200 dark:border-gray-600 p-4 rounded-md space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Job Title\",\n            name: \"title\",\n            value: exp.title,\n            onChange: e => handleArrayChange(e, index, 'title', 'experience')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Company\",\n            name: \"company\",\n            value: exp.company,\n            onChange: e => handleArrayChange(e, index, 'company', 'experience')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Years (e.g., 2020-2023)\",\n            name: \"years\",\n            value: exp.years,\n            onChange: e => handleArrayChange(e, index, 'years', 'experience')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n            label: \"Responsibilities & Achievements (use bullet points)\",\n            name: \"description\",\n            value: exp.description,\n            onChange: e => handleArrayChange(e, index, 'description', 'experience')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              label: \"AI Suggestion\",\n              onClick: () => handleAISuggestion(),\n              className: \"bg-purple-500 text-white hover:bg-purple-600 text-sm py-1 px-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), resumeData.experience.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n              label: \"Remove\",\n              onClick: () => removeField(index, 'experience'),\n              className: \"bg-red-400 text-white hover:bg-red-500 text-sm py-1 px-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"+ Add Experience\",\n          onClick: () => addField('experience'),\n          primary: true,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-800 dark:text-gray-100 mt-6 mb-3\",\n          children: \"Education\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), resumeData.education.map((edu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border border-gray-200 dark:border-gray-600 p-4 rounded-md space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Degree/Program\",\n            name: \"degree\",\n            value: edu.degree,\n            onChange: e => handleArrayChange(e, index, 'degree', 'education')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"University/Institution\",\n            name: \"university\",\n            value: edu.university,\n            onChange: e => handleArrayChange(e, index, 'university', 'education')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Years (e.g., 2016-2020)\",\n            name: \"years\",\n            value: edu.years,\n            onChange: e => handleArrayChange(e, index, 'years', 'education')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), resumeData.education.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Remove\",\n            onClick: () => removeField(index, 'education'),\n            className: \"bg-red-400 text-white hover:bg-red-500 text-sm py-1 px-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          label: \"+ Add Education\",\n          onClick: () => addField('education'),\n          primary: true,\n          className: \"w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Skills (comma-separated)\",\n          name: \"skills\",\n          value: resumeData.skills,\n          onChange: handleChange,\n          placeholder: \"e.g., JavaScript, React, MySQL, Project Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 dark:bg-gray-700 p-6 rounded-lg shadow-inner overflow-auto h-full max-h-[80vh] sticky top-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-center text-gray-900 dark:text-gray-100 mb-4\",\n          children: \"Live Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-preview p-5 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-900 shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-2xl font-bold text-blue-700 dark:text-blue-300 mb-1\",\n            children: resumeData.name || 'Your Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-400 mb-4\",\n            children: resumeData.contact || 'Contact Info'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\",\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 dark:text-gray-300 text-sm mb-4\",\n            children: resumeData.summary || 'A brief professional summary.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), resumeData.experience.map((exp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"font-semibold text-gray-800 dark:text-gray-200\",\n              children: [exp.title || 'Job Title', \" at \", exp.company || 'Company', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"float-right text-sm\",\n                children: exp.years || 'Years'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 153\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc list-inside text-gray-700 dark:text-gray-300 text-sm\",\n              children: (exp.description || 'Key responsibilities and achievements.').split('\\n').map((item, i) => item.trim() && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item.trim()\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 144\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), resumeData.education.map((edu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"font-semibold text-gray-800 dark:text-gray-200\",\n              children: [edu.degree || 'Degree', \" from \", edu.university || 'University', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"float-right text-sm\",\n                children: edu.years || 'Years'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 159\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 dark:text-gray-300 text-sm\",\n            children: resumeData.skills || 'Your skills here.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        label: selectedDocId ? \"Update Resume\" : \"Save Resume\",\n        onClick: handleSaveResume,\n        primary: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Export to PDF\",\n        onClick: handleExportPdf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Cancel\",\n        onClick: () => {\n          setSelectedDocId(null);\n          setCurrentPage('dashboard');\n        },\n        className: \"bg-gray-400 text-white hover:bg-gray-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(ResumeBuilder, \"345QveaK7aF86BNEY11RKiTMic4=\");\n_c = ResumeBuilder;\nexport default ResumeBuilder;\nvar _c;\n$RefreshReg$(_c, \"ResumeBuilder\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","api","InputField","TextAreaField","Button","jsxDEV","_jsxDEV","ResumeBuilder","_s","userId","showMessage","selectedDocId","setSelectedDocId","setCurrentPage","resumeData","setResumeData","name","contact","summary","experience","title","company","years","description","education","degree","university","skills","loadingDoc","setLoadingDoc","loadDocument","response","get","data","error","console","handleChange","e","value","target","prev","handleArrayChange","index","field","arrayName","map","item","i","addField","removeField","filter","_","handleSaveResume","docTitle","put","post","id","_error$response","_error$response$data","message","handleAISuggestion","_resumeData$experienc","chatHistory","prompt","push","role","parts","text","payload","contents","apiKey","apiUrl","fetch","method","headers","body","JSON","stringify","result","json","candidates","length","content","handleExportPdf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","placeholder","exp","onClick","primary","edu","split","trim","_c","$RefreshReg$"],"sources":["/home/sam_dev/Projects/resume-app/frontend/src/pages/ResumeBuilder.js"],"sourcesContent":["// frontend/src/pages/ResumeBuilder.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AppContext } from '../App';\nimport api from '../services/api'; // Import our Axios instance for backend calls\nimport { InputField, TextAreaField, Button } from '../components/common'; // Assuming common UI components\n\nconst ResumeBuilder = () => {\n    const { userId, showMessage, selectedDocId, setSelectedDocId, setCurrentPage } = useContext(AppContext);\n    const [resumeData, setResumeData] = useState({\n        name: '',\n        contact: '',\n        summary: '',\n        experience: [{ title: '', company: '', years: '', description: '' }],\n        education: [{ degree: '', university: '', years: '' }],\n        skills: '',\n    });\n    const [loadingDoc, setLoadingDoc] = useState(!!selectedDocId); // Loading state for existing doc\n\n    // Load existing document from backend if selectedDocId is set\n    useEffect(() => {\n        const loadDocument = async () => {\n            if (!userId || !selectedDocId) {\n                setLoadingDoc(false);\n                return;\n            }\n\n            try {\n                const response = await api.get(`/resumes/${selectedDocId}`);\n                const data = response.data.data; // The actual resume content is in the 'data' field of the response\n                setResumeData(data);\n                showMessage(\"Resume loaded for editing.\", \"info\");\n            } catch (error) {\n                console.error(\"Error loading resume from backend:\", error);\n                showMessage(\"Failed to load resume. It might not exist or you don't have access.\", \"error\");\n                setSelectedDocId(null); // Clear selected ID if not found or error\n            } finally {\n                setLoadingDoc(false);\n            }\n        };\n\n        if (selectedDocId) {\n            loadDocument();\n        } else {\n            // Reset to default if creating a new document\n            setResumeData({\n                name: '',\n                contact: '',\n                summary: '',\n                experience: [{ title: '', company: '', years: '', description: '' }],\n                education: [{ degree: '', university: '', years: '' }],\n                skills: '',\n            });\n            setLoadingDoc(false);\n        }\n    }, [selectedDocId, userId, showMessage, setSelectedDocId]);\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setResumeData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleArrayChange = (e, index, field, arrayName) => {\n        const { value } = e.target;\n        setResumeData(prev => ({\n            ...prev,\n            [arrayName]: prev[arrayName].map((item, i) =>\n                i === index ? { ...item, [field]: value } : item\n            )\n        }));\n    };\n\n    const addField = (arrayName) => {\n        if (arrayName === 'experience') {\n            setResumeData(prev => ({ ...prev, experience: [...prev.experience, { title: '', company: '', years: '', description: '' }] }));\n        } else if (arrayName === 'education') {\n            setResumeData(prev => ({ ...prev, education: [...prev.education, { degree: '', university: '', years: '' }] }));\n        }\n    };\n\n    const removeField = (index, arrayName) => {\n        setResumeData(prev => ({\n            ...prev,\n            [arrayName]: prev[arrayName].filter((_, i) => i !== index)\n        }));\n    };\n\n    const handleSaveResume = async () => {\n        if (!userId) {\n            showMessage(\"Please log in to save documents.\", \"error\");\n            return;\n        }\n\n        try {\n            // A simple title for the document (can be made more dynamic)\n            const docTitle = resumeData.name ? `${resumeData.name}'s Resume` : 'Untitled Resume';\n\n            if (selectedDocId) {\n                // Update existing document via backend API (PUT request)\n                await api.put(`/resumes/${selectedDocId}`, {\n                    title: docTitle,\n                    data: resumeData,\n                });\n                showMessage(\"Resume updated successfully!\", \"success\");\n            } else {\n                // Create new document via backend API (POST request)\n                const response = await api.post('/resumes', {\n                    title: docTitle,\n                    data: resumeData,\n                });\n                showMessage(\"Resume saved successfully!\", \"success\");\n                setSelectedDocId(response.data.id); // Set the new ID for potential further edits\n            }\n            setCurrentPage('dashboard'); // Go back to dashboard after saving\n        } catch (error) {\n            console.error(\"Error saving resume to backend:\", error);\n            showMessage(`Failed to save resume: ${error.response?.data?.message || error.message}`, \"error\");\n        }\n    };\n\n    // Placeholder for AI assistant feature (still client-side for now)\n    const handleAISuggestion = async () => {\n        showMessage(\"AI Assistant feature under development.\", \"info\");\n        // Example AI call (using gemini-2.0-flash as specified)\n        try {\n            let chatHistory = [];\n            const prompt = `Generate 3 strong, concise bullet points for a resume experience section based on the following role description: \"${resumeData.experience[0]?.description}\". Focus on achievements and quantifiable results.`;\n            chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n            const payload = { contents: chatHistory };\n            const apiKey = \"\"; // Canvas will automatically provide this\n            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n            const response = await fetch(apiUrl, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload)\n            });\n            const result = await response.json();\n\n            if (result.candidates && result.candidates.length > 0 &&\n                result.candidates[0].content && result.candidates[0].content.parts &&\n                result.candidates[0].content.parts.length > 0) {\n                const text = result.candidates[0].content.parts[0].text;\n                showMessage(`AI Suggestion: ${text}`, \"info\");\n                // In a real app, you'd parse this and let the user add it to their resume\n            } else {\n                showMessage(\"AI could not generate suggestions. Please try again.\", \"error\");\n            }\n        } catch (error) {\n            console.error(\"AI suggestion error:\", error);\n            showMessage(\"Error connecting to AI. Please try again.\", \"error\");\n        }\n    };\n\n\n    const handleExportPdf = () => {\n        showMessage(\"PDF export feature coming soon! (Backend integration with Puppeteer/jsPDF is needed)\", \"info\");\n        // In a real application, you would make an API call to your backend\n        // (e.g., api.post('/generate-pdf/resume', { resumeData }))\n        // and the backend (using Puppeteer or jsPDF-node) would generate and return the PDF.\n    };\n\n    if (loadingDoc) {\n        return (\n            <div className=\"flex justify-center items-center h-64\">\n                <p className=\"text-lg text-gray-700 dark:text-gray-300\">Loading resume data...</p>\n            </div>\n        );\n    }\n\n    return (\n        <section className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mb-8\">\n            <h2 className=\"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\">{selectedDocId ? 'Edit Resume' : 'New Resume'}</h2>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                {/* Resume Input Form */}\n                <div className=\"space-y-6\">\n                    <InputField label=\"Full Name\" name=\"name\" value={resumeData.name} onChange={handleChange} />\n                    <InputField label=\"Contact Info (Email, Phone, LinkedIn)\" name=\"contact\" value={resumeData.contact} onChange={handleChange} />\n                    <TextAreaField label=\"Professional Summary\" name=\"summary\" value={resumeData.summary} onChange={handleChange} placeholder=\"A concise summary of your experience and career goals.\" />\n\n                    <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mt-6 mb-3\">Experience</h3>\n                    {resumeData.experience.map((exp, index) => (\n                        <div key={index} className=\"border border-gray-200 dark:border-gray-600 p-4 rounded-md space-y-3\">\n                            <InputField label=\"Job Title\" name=\"title\" value={exp.title} onChange={(e) => handleArrayChange(e, index, 'title', 'experience')} />\n                            <InputField label=\"Company\" name=\"company\" value={exp.company} onChange={(e) => handleArrayChange(e, index, 'company', 'experience')} />\n                            <InputField label=\"Years (e.g., 2020-2023)\" name=\"years\" value={exp.years} onChange={(e) => handleArrayChange(e, index, 'years', 'experience')} />\n                            <TextAreaField label=\"Responsibilities & Achievements (use bullet points)\" name=\"description\" value={exp.description} onChange={(e) => handleArrayChange(e, index, 'description', 'experience')} />\n                            <div className=\"flex space-x-2\">\n                                <Button label=\"AI Suggestion\" onClick={() => handleAISuggestion()} className=\"bg-purple-500 text-white hover:bg-purple-600 text-sm py-1 px-3\" />\n                                {resumeData.experience.length > 1 && (\n                                    <Button label=\"Remove\" onClick={() => removeField(index, 'experience')} className=\"bg-red-400 text-white hover:bg-red-500 text-sm py-1 px-3\" />\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                    <Button label=\"+ Add Experience\" onClick={() => addField('experience')} primary className=\"w-full\" />\n\n                    <h3 className=\"text-xl font-semibold text-gray-800 dark:text-gray-100 mt-6 mb-3\">Education</h3>\n                    {resumeData.education.map((edu, index) => (\n                        <div key={index} className=\"border border-gray-200 dark:border-gray-600 p-4 rounded-md space-y-3\">\n                            <InputField label=\"Degree/Program\" name=\"degree\" value={edu.degree} onChange={(e) => handleArrayChange(e, index, 'degree', 'education')} />\n                            <InputField label=\"University/Institution\" name=\"university\" value={edu.university} onChange={(e) => handleArrayChange(e, index, 'university', 'education')} />\n                            <InputField label=\"Years (e.g., 2016-2020)\" name=\"years\" value={edu.years} onChange={(e) => handleArrayChange(e, index, 'years', 'education')} />\n                            {resumeData.education.length > 1 && (\n                                <Button label=\"Remove\" onClick={() => removeField(index, 'education')} className=\"bg-red-400 text-white hover:bg-red-500 text-sm py-1 px-3\" />\n                            )}\n                        </div>\n                    ))}\n                    <Button label=\"+ Add Education\" onClick={() => addField('education')} primary className=\"w-full\" />\n\n                    <InputField label=\"Skills (comma-separated)\" name=\"skills\" value={resumeData.skills} onChange={handleChange} placeholder=\"e.g., JavaScript, React, MySQL, Project Management\" />\n                </div>\n\n                {/* Resume Live Preview */}\n                <div className=\"bg-gray-50 dark:bg-gray-700 p-6 rounded-lg shadow-inner overflow-auto h-full max-h-[80vh] sticky top-4\">\n                    <h3 className=\"text-2xl font-bold text-center text-gray-900 dark:text-gray-100 mb-4\">Live Preview</h3>\n                    <div className=\"resume-preview p-5 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-900 shadow-md\">\n                        <h4 className=\"text-2xl font-bold text-blue-700 dark:text-blue-300 mb-1\">{resumeData.name || 'Your Name'}</h4>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">{resumeData.contact || 'Contact Info'}</p>\n\n                        <h5 className=\"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\">Summary</h5>\n                        <p className=\"text-gray-700 dark:text-gray-300 text-sm mb-4\">{resumeData.summary || 'A brief professional summary.'}</p>\n\n                        <h5 className=\"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\">Experience</h5>\n                        {resumeData.experience.map((exp, index) => (\n                            <div key={index} className=\"mb-3\">\n                                <h6 className=\"font-semibold text-gray-800 dark:text-gray-200\">{exp.title || 'Job Title'} at {exp.company || 'Company'} <span className=\"float-right text-sm\">{exp.years || 'Years'}</span></h6>\n                                <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 text-sm\">\n                                    {(exp.description || 'Key responsibilities and achievements.').split('\\n').map((item, i) => item.trim() && <li key={i}>{item.trim()}</li>)}\n                                </ul>\n                            </div>\n                        ))}\n\n                        <h5 className=\"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\">Education</h5>\n                        {resumeData.education.map((edu, index) => (\n                            <div key={index} className=\"mb-3\">\n                                <h6 className=\"font-semibold text-gray-800 dark:text-gray-200\">{edu.degree || 'Degree'} from {edu.university || 'University'} <span className=\"float-right text-sm\">{edu.years || 'Years'}</span></h6>\n                            </div>\n                        ))}\n\n                        <h5 className=\"text-lg font-semibold border-b-2 border-blue-500 pb-1 mb-2\">Skills</h5>\n                        <p className=\"text-gray-700 dark:text-gray-300 text-sm\">{resumeData.skills || 'Your skills here.'}</p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"flex justify-center space-x-4 mt-8\">\n                <Button label={selectedDocId ? \"Update Resume\" : \"Save Resume\"} onClick={handleSaveResume} primary />\n                <Button label=\"Export to PDF\" onClick={handleExportPdf} />\n                <Button label=\"Cancel\" onClick={() => { setSelectedDocId(null); setCurrentPage('dashboard'); }} className=\"bg-gray-400 text-white hover:bg-gray-500\" />\n            </div>\n        </section>\n    );\n};\n\nexport default ResumeBuilder;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AACnC,SAASC,UAAU,EAAEC,aAAa,EAAEC,MAAM,QAAQ,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,MAAM;IAAEC,WAAW;IAAEC,aAAa;IAAEC,gBAAgB;IAAEC;EAAe,CAAC,GAAGd,UAAU,CAACC,UAAU,CAAC;EACvG,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC;IACzCmB,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC,CAAC;IACpEC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEJ,KAAK,EAAE;IAAG,CAAC,CAAC;IACtDK,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAACc,aAAa,CAAC,CAAC,CAAC;;EAE/D;EACAb,SAAS,CAAC,MAAM;IACZ,MAAMgC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACrB,MAAM,IAAI,CAACE,aAAa,EAAE;QAC3BkB,aAAa,CAAC,KAAK,CAAC;QACpB;MACJ;MAEA,IAAI;QACA,MAAME,QAAQ,GAAG,MAAM9B,GAAG,CAAC+B,GAAG,CAAC,YAAYrB,aAAa,EAAE,CAAC;QAC3D,MAAMsB,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;QACjClB,aAAa,CAACkB,IAAI,CAAC;QACnBvB,WAAW,CAAC,4BAA4B,EAAE,MAAM,CAAC;MACrD,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1DxB,WAAW,CAAC,qEAAqE,EAAE,OAAO,CAAC;QAC3FE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,SAAS;QACNiB,aAAa,CAAC,KAAK,CAAC;MACxB;IACJ,CAAC;IAED,IAAIlB,aAAa,EAAE;MACfmB,YAAY,CAAC,CAAC;IAClB,CAAC,MAAM;MACH;MACAf,aAAa,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,UAAU,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAG,CAAC,CAAC;QACpEC,SAAS,EAAE,CAAC;UAAEC,MAAM,EAAE,EAAE;UAAEC,UAAU,EAAE,EAAE;UAAEJ,KAAK,EAAE;QAAG,CAAC,CAAC;QACtDK,MAAM,EAAE;MACZ,CAAC,CAAC;MACFE,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,CAAClB,aAAa,EAAEF,MAAM,EAAEC,WAAW,EAAEE,gBAAgB,CAAC,CAAC;EAG1D,MAAMwB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAErB,IAAI;MAAEsB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCxB,aAAa,CAACyB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACxB,IAAI,GAAGsB;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAACJ,CAAC,EAAEK,KAAK,EAAEC,KAAK,EAAEC,SAAS,KAAK;IACtD,MAAM;MAAEN;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1BxB,aAAa,CAACyB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACI,SAAS,GAAGJ,IAAI,CAACI,SAAS,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACrCA,CAAC,KAAKL,KAAK,GAAG;QAAE,GAAGI,IAAI;QAAE,CAACH,KAAK,GAAGL;MAAM,CAAC,GAAGQ,IAChD;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAME,QAAQ,GAAIJ,SAAS,IAAK;IAC5B,IAAIA,SAAS,KAAK,YAAY,EAAE;MAC5B7B,aAAa,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAErB,UAAU,EAAE,CAAC,GAAGqB,IAAI,CAACrB,UAAU,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,OAAO,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAG,CAAC;MAAE,CAAC,CAAC,CAAC;IAClI,CAAC,MAAM,IAAIqB,SAAS,KAAK,WAAW,EAAE;MAClC7B,aAAa,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEhB,SAAS,EAAE,CAAC,GAAGgB,IAAI,CAAChB,SAAS,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,UAAU,EAAE,EAAE;UAAEJ,KAAK,EAAE;QAAG,CAAC;MAAE,CAAC,CAAC,CAAC;IACnH;EACJ,CAAC;EAED,MAAM2B,WAAW,GAAGA,CAACP,KAAK,EAAEE,SAAS,KAAK;IACtC7B,aAAa,CAACyB,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACI,SAAS,GAAGJ,IAAI,CAACI,SAAS,CAAC,CAACM,MAAM,CAAC,CAACC,CAAC,EAAEJ,CAAC,KAAKA,CAAC,KAAKL,KAAK;IAC7D,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAC3C,MAAM,EAAE;MACTC,WAAW,CAAC,kCAAkC,EAAE,OAAO,CAAC;MACxD;IACJ;IAEA,IAAI;MACA;MACA,MAAM2C,QAAQ,GAAGvC,UAAU,CAACE,IAAI,GAAG,GAAGF,UAAU,CAACE,IAAI,WAAW,GAAG,iBAAiB;MAEpF,IAAIL,aAAa,EAAE;QACf;QACA,MAAMV,GAAG,CAACqD,GAAG,CAAC,YAAY3C,aAAa,EAAE,EAAE;UACvCS,KAAK,EAAEiC,QAAQ;UACfpB,IAAI,EAAEnB;QACV,CAAC,CAAC;QACFJ,WAAW,CAAC,8BAA8B,EAAE,SAAS,CAAC;MAC1D,CAAC,MAAM;QACH;QACA,MAAMqB,QAAQ,GAAG,MAAM9B,GAAG,CAACsD,IAAI,CAAC,UAAU,EAAE;UACxCnC,KAAK,EAAEiC,QAAQ;UACfpB,IAAI,EAAEnB;QACV,CAAC,CAAC;QACFJ,WAAW,CAAC,4BAA4B,EAAE,SAAS,CAAC;QACpDE,gBAAgB,CAACmB,QAAQ,CAACE,IAAI,CAACuB,EAAE,CAAC,CAAC,CAAC;MACxC;MACA3C,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOqB,KAAK,EAAE;MAAA,IAAAuB,eAAA,EAAAC,oBAAA;MACZvB,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDxB,WAAW,CAAC,0BAA0B,EAAA+C,eAAA,GAAAvB,KAAK,CAACH,QAAQ,cAAA0B,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBxB,IAAI,cAAAyB,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAIzB,KAAK,CAACyB,OAAO,EAAE,EAAE,OAAO,CAAC;IACpG;EACJ,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnClD,WAAW,CAAC,yCAAyC,EAAE,MAAM,CAAC;IAC9D;IACA,IAAI;MAAA,IAAAmD,qBAAA;MACA,IAAIC,WAAW,GAAG,EAAE;MACpB,MAAMC,MAAM,GAAG,uHAAAF,qBAAA,GAAsH/C,UAAU,CAACK,UAAU,CAAC,CAAC,CAAC,cAAA0C,qBAAA,uBAAxBA,qBAAA,CAA0BtC,WAAW,oDAAoD;MAC9NuC,WAAW,CAACE,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,KAAK,EAAE,CAAC;UAAEC,IAAI,EAAEJ;QAAO,CAAC;MAAE,CAAC,CAAC;MAC7D,MAAMK,OAAO,GAAG;QAAEC,QAAQ,EAAEP;MAAY,CAAC;MACzC,MAAMQ,MAAM,GAAG,EAAE,CAAC,CAAC;MACnB,MAAMC,MAAM,GAAG,gGAAgGD,MAAM,EAAE;MAEvH,MAAMvC,QAAQ,GAAG,MAAMyC,KAAK,CAACD,MAAM,EAAE;QACjCE,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;MAChC,CAAC,CAAC;MACF,MAAMU,MAAM,GAAG,MAAM/C,QAAQ,CAACgD,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACE,UAAU,CAACC,MAAM,GAAG,CAAC,IACjDH,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,IAAIJ,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAChB,KAAK,IAClEY,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAChB,KAAK,CAACe,MAAM,GAAG,CAAC,EAAE;QAC/C,MAAMd,IAAI,GAAGW,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAChB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;QACvDzD,WAAW,CAAC,kBAAkByD,IAAI,EAAE,EAAE,MAAM,CAAC;QAC7C;MACJ,CAAC,MAAM;QACHzD,WAAW,CAAC,sDAAsD,EAAE,OAAO,CAAC;MAChF;IACJ,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CxB,WAAW,CAAC,2CAA2C,EAAE,OAAO,CAAC;IACrE;EACJ,CAAC;EAGD,MAAMyE,eAAe,GAAGA,CAAA,KAAM;IAC1BzE,WAAW,CAAC,sFAAsF,EAAE,MAAM,CAAC;IAC3G;IACA;IACA;EACJ,CAAC;EAED,IAAIkB,UAAU,EAAE;IACZ,oBACItB,OAAA;MAAK8E,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eAClD/E,OAAA;QAAG8E,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC;EAEd;EAEA,oBACInF,OAAA;IAAS8E,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBACxE/E,OAAA;MAAI8E,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAE1E,aAAa,GAAG,aAAa,GAAG;IAAY;MAAA2E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5InF,OAAA;MAAK8E,SAAS,EAAC,uCAAuC;MAAAC,QAAA,gBAElD/E,OAAA;QAAK8E,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtB/E,OAAA,CAACJ,UAAU;UAACwF,KAAK,EAAC,WAAW;UAAC1E,IAAI,EAAC,MAAM;UAACsB,KAAK,EAAExB,UAAU,CAACE,IAAK;UAAC2E,QAAQ,EAAEvD;QAAa;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5FnF,OAAA,CAACJ,UAAU;UAACwF,KAAK,EAAC,uCAAuC;UAAC1E,IAAI,EAAC,SAAS;UAACsB,KAAK,EAAExB,UAAU,CAACG,OAAQ;UAAC0E,QAAQ,EAAEvD;QAAa;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9HnF,OAAA,CAACH,aAAa;UAACuF,KAAK,EAAC,sBAAsB;UAAC1E,IAAI,EAAC,SAAS;UAACsB,KAAK,EAAExB,UAAU,CAACI,OAAQ;UAACyE,QAAQ,EAAEvD,YAAa;UAACwD,WAAW,EAAC;QAAwD;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAErLnF,OAAA;UAAI8E,SAAS,EAAC,kEAAkE;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC/F3E,UAAU,CAACK,UAAU,CAAC0B,GAAG,CAAC,CAACgD,GAAG,EAAEnD,KAAK,kBAClCpC,OAAA;UAAiB8E,SAAS,EAAC,sEAAsE;UAAAC,QAAA,gBAC7F/E,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,WAAW;YAAC1E,IAAI,EAAC,OAAO;YAACsB,KAAK,EAAEuD,GAAG,CAACzE,KAAM;YAACuE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,OAAO,EAAE,YAAY;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpInF,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,SAAS;YAAC1E,IAAI,EAAC,SAAS;YAACsB,KAAK,EAAEuD,GAAG,CAACxE,OAAQ;YAACsE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,SAAS,EAAE,YAAY;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxInF,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,yBAAyB;YAAC1E,IAAI,EAAC,OAAO;YAACsB,KAAK,EAAEuD,GAAG,CAACvE,KAAM;YAACqE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,OAAO,EAAE,YAAY;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClJnF,OAAA,CAACH,aAAa;YAACuF,KAAK,EAAC,qDAAqD;YAAC1E,IAAI,EAAC,aAAa;YAACsB,KAAK,EAAEuD,GAAG,CAACtE,WAAY;YAACoE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,aAAa,EAAE,YAAY;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnMnF,OAAA;YAAK8E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B/E,OAAA,CAACF,MAAM;cAACsF,KAAK,EAAC,eAAe;cAACI,OAAO,EAAEA,CAAA,KAAMlC,kBAAkB,CAAC,CAAE;cAACwB,SAAS,EAAC;YAAgE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC/I3E,UAAU,CAACK,UAAU,CAAC8D,MAAM,GAAG,CAAC,iBAC7B3E,OAAA,CAACF,MAAM;cAACsF,KAAK,EAAC,QAAQ;cAACI,OAAO,EAAEA,CAAA,KAAM7C,WAAW,CAACP,KAAK,EAAE,YAAY,CAAE;cAAC0C,SAAS,EAAC;YAA0D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACjJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAVA/C,KAAK;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CACR,CAAC,eACFnF,OAAA,CAACF,MAAM;UAACsF,KAAK,EAAC,kBAAkB;UAACI,OAAO,EAAEA,CAAA,KAAM9C,QAAQ,CAAC,YAAY,CAAE;UAAC+C,OAAO;UAACX,SAAS,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAErGnF,OAAA;UAAI8E,SAAS,EAAC,kEAAkE;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC9F3E,UAAU,CAACU,SAAS,CAACqB,GAAG,CAAC,CAACmD,GAAG,EAAEtD,KAAK,kBACjCpC,OAAA;UAAiB8E,SAAS,EAAC,sEAAsE;UAAAC,QAAA,gBAC7F/E,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,gBAAgB;YAAC1E,IAAI,EAAC,QAAQ;YAACsB,KAAK,EAAE0D,GAAG,CAACvE,MAAO;YAACkE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,QAAQ,EAAE,WAAW;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3InF,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,wBAAwB;YAAC1E,IAAI,EAAC,YAAY;YAACsB,KAAK,EAAE0D,GAAG,CAACtE,UAAW;YAACiE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,YAAY,EAAE,WAAW;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/JnF,OAAA,CAACJ,UAAU;YAACwF,KAAK,EAAC,yBAAyB;YAAC1E,IAAI,EAAC,OAAO;YAACsB,KAAK,EAAE0D,GAAG,CAAC1E,KAAM;YAACqE,QAAQ,EAAGtD,CAAC,IAAKI,iBAAiB,CAACJ,CAAC,EAAEK,KAAK,EAAE,OAAO,EAAE,WAAW;UAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAChJ3E,UAAU,CAACU,SAAS,CAACyD,MAAM,GAAG,CAAC,iBAC5B3E,OAAA,CAACF,MAAM;YAACsF,KAAK,EAAC,QAAQ;YAACI,OAAO,EAAEA,CAAA,KAAM7C,WAAW,CAACP,KAAK,EAAE,WAAW,CAAE;YAAC0C,SAAS,EAAC;UAA0D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAChJ;QAAA,GANK/C,KAAK;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACR,CAAC,eACFnF,OAAA,CAACF,MAAM;UAACsF,KAAK,EAAC,iBAAiB;UAACI,OAAO,EAAEA,CAAA,KAAM9C,QAAQ,CAAC,WAAW,CAAE;UAAC+C,OAAO;UAACX,SAAS,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEnGnF,OAAA,CAACJ,UAAU;UAACwF,KAAK,EAAC,0BAA0B;UAAC1E,IAAI,EAAC,QAAQ;UAACsB,KAAK,EAAExB,UAAU,CAACa,MAAO;UAACgE,QAAQ,EAAEvD,YAAa;UAACwD,WAAW,EAAC;QAAoD;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/K,CAAC,eAGNnF,OAAA;QAAK8E,SAAS,EAAC,wGAAwG;QAAAC,QAAA,gBACnH/E,OAAA;UAAI8E,SAAS,EAAC,sEAAsE;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtGnF,OAAA;UAAK8E,SAAS,EAAC,+GAA+G;UAAAC,QAAA,gBAC1H/E,OAAA;YAAI8E,SAAS,EAAC,0DAA0D;YAAAC,QAAA,EAAEvE,UAAU,CAACE,IAAI,IAAI;UAAW;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9GnF,OAAA;YAAG8E,SAAS,EAAC,+CAA+C;YAAAC,QAAA,EAAEvE,UAAU,CAACG,OAAO,IAAI;UAAc;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEvGnF,OAAA;YAAI8E,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvFnF,OAAA;YAAG8E,SAAS,EAAC,+CAA+C;YAAAC,QAAA,EAAEvE,UAAU,CAACI,OAAO,IAAI;UAA+B;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAExHnF,OAAA;YAAI8E,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACzF3E,UAAU,CAACK,UAAU,CAAC0B,GAAG,CAAC,CAACgD,GAAG,EAAEnD,KAAK,kBAClCpC,OAAA;YAAiB8E,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAC7B/E,OAAA;cAAI8E,SAAS,EAAC,gDAAgD;cAAAC,QAAA,GAAEQ,GAAG,CAACzE,KAAK,IAAI,WAAW,EAAC,MAAI,EAACyE,GAAG,CAACxE,OAAO,IAAI,SAAS,EAAC,GAAC,eAAAf,OAAA;gBAAM8E,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAEQ,GAAG,CAACvE,KAAK,IAAI;cAAO;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChMnF,OAAA;cAAI8E,SAAS,EAAC,gEAAgE;cAAAC,QAAA,EACzE,CAACQ,GAAG,CAACtE,WAAW,IAAI,wCAAwC,EAAE0E,KAAK,CAAC,IAAI,CAAC,CAACpD,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAKD,IAAI,CAACoD,IAAI,CAAC,CAAC,iBAAI5F,OAAA;gBAAA+E,QAAA,EAAavC,IAAI,CAACoD,IAAI,CAAC;cAAC,GAAfnD,CAAC;gBAAAuC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAmB,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1I,CAAC;UAAA,GAJC/C,KAAK;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACR,CAAC,eAEFnF,OAAA;YAAI8E,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACxF3E,UAAU,CAACU,SAAS,CAACqB,GAAG,CAAC,CAACmD,GAAG,EAAEtD,KAAK,kBACjCpC,OAAA;YAAiB8E,SAAS,EAAC,MAAM;YAAAC,QAAA,eAC7B/E,OAAA;cAAI8E,SAAS,EAAC,gDAAgD;cAAAC,QAAA,GAAEW,GAAG,CAACvE,MAAM,IAAI,QAAQ,EAAC,QAAM,EAACuE,GAAG,CAACtE,UAAU,IAAI,YAAY,EAAC,GAAC,eAAApB,OAAA;gBAAM8E,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAEW,GAAG,CAAC1E,KAAK,IAAI;cAAO;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC,GADhM/C,KAAK;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACR,CAAC,eAEFnF,OAAA;YAAI8E,SAAS,EAAC,4DAA4D;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtFnF,OAAA;YAAG8E,SAAS,EAAC,0CAA0C;YAAAC,QAAA,EAAEvE,UAAU,CAACa,MAAM,IAAI;UAAmB;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENnF,OAAA;MAAK8E,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBAC/C/E,OAAA,CAACF,MAAM;QAACsF,KAAK,EAAE/E,aAAa,GAAG,eAAe,GAAG,aAAc;QAACmF,OAAO,EAAE1C,gBAAiB;QAAC2C,OAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGnF,OAAA,CAACF,MAAM;QAACsF,KAAK,EAAC,eAAe;QAACI,OAAO,EAAEX;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DnF,OAAA,CAACF,MAAM;QAACsF,KAAK,EAAC,QAAQ;QAACI,OAAO,EAAEA,CAAA,KAAM;UAAElF,gBAAgB,CAAC,IAAI,CAAC;UAAEC,cAAc,CAAC,WAAW,CAAC;QAAE,CAAE;QAACuE,SAAS,EAAC;MAA0C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAACjF,EAAA,CAvPID,aAAa;AAAA4F,EAAA,GAAb5F,aAAa;AAyPnB,eAAeA,aAAa;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}