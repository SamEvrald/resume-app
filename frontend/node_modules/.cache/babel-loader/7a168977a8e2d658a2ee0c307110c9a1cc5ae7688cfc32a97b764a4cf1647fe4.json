{"ast":null,"code":"var _jsxFileName = \"/home/sam_dev/Projects/resume-app/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { auth, db } from './services/firebase'; // Firebase client SDK\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport api from './services/api'; // Our Axios instance for backend calls\nimport { collection, onSnapshot, addDoc, getDocs } from 'firebase/firestore'; // For TemplatesPage using Firestore\n\n// Import UI Components from common\nimport { InputField, TextAreaField, Button, MessageBox } from './components/common';\n\n// Import Page Components\nimport LoginForm from './pages/Login';\nimport RegisterForm from './pages/Register';\nimport ResetPasswordForm from './pages/ResetPassword';\nimport Dashboard from './pages/Home'; // Dashboard (Home)\nimport ResumeBuilder from './pages/ResumeBuilder';\nimport CoverLetterBuilder from './pages/LetterBuilder'; // Cover Letter Builder\n\n// Define context for global application state\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(null); // Export AppContext for use in other components\n\n// Main App Component\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null); // Firebase User object\n  const [userId, setUserId] = useState(null); // Firebase UID (string)\n  const [loadingAuth, setLoadingAuth] = useState(true); // To indicate if auth state is resolving\n  const [currentPage, setCurrentPage] = useState('dashboard'); // 'dashboard', 'resumeBuilder', 'coverLetterBuilder', 'templates'\n  const [currentAuthPage, setCurrentAuthPage] = useState('login'); // 'login', 'register', 'reset-password'\n  const [selectedDocId, setSelectedDocId] = useState(null); // For editing existing documents\n\n  // State for message box\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('info');\n\n  // Show a message to the user\n  const showMessage = (msg, type = 'info') => {\n    setMessage(msg);\n    setMessageType(type);\n  };\n\n  // Close the message box\n  const closeMessage = () => {\n    setMessage('');\n  };\n\n  // Listen for Firebase Auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      if (firebaseUser) {\n        // User is signed in with Firebase.\n        // Now, get their ID token and sync with our backend.\n        try {\n          const idToken = await firebaseUser.getIdToken();\n          // Send ID token to your backend to sync user data in MySQL\n          const response = await api.post('/auth/sync-user', {}, {\n            headers: {\n              Authorization: `Bearer ${idToken}`\n            }\n          });\n          console.log('User synced with backend:', response.data);\n          setUser(firebaseUser);\n          setUserId(firebaseUser.uid);\n          showMessage(`Logged in as ${firebaseUser.email}!`, 'success');\n          setCurrentPage('dashboard'); // Redirect to dashboard on successful login/sync\n        } catch (error) {\n          console.error('Error syncing user with backend:', error);\n          showMessage(`Failed to sync user with backend: ${error.message}`, 'error');\n          // If sync fails, consider logging out the user or restricting access\n          await signOut(auth);\n          setUser(null);\n          setUserId(null);\n          setCurrentPage('auth'); // Show auth forms on sync failure\n        }\n      } else {\n        // User is signed out or no user is logged in\n        setUser(null);\n        setUserId(null);\n        // Redirect to login form if not authenticated\n        setCurrentPage('auth'); // A special page to render auth forms\n      }\n      setLoadingAuth(false);\n    });\n\n    // Cleanup subscription on component unmount\n    return () => unsubscribe();\n  }, []); // Empty dependency array means this runs once on mount/unmount\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n      // onAuthStateChanged listener will handle updating user state and redirecting\n      showMessage('Logged out successfully.', 'info');\n    } catch (error) {\n      console.error('Logout error:', error);\n      showMessage(`Logout failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Conditional rendering based on authentication loading state\n  if (loadingAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl text-gray-700 dark:text-gray-300\",\n        children: \"Loading application...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      user,\n      userId,\n      db,\n      auth,\n      showMessage,\n      selectedDocId,\n      setSelectedDocId,\n      setCurrentPage\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-inter flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setCurrentPage: setCurrentPage,\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-grow container mx-auto p-4 md:p-6 lg:p-8 flex flex-col\",\n        children: !userId || currentPage === 'auth' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-grow items-center justify-center\",\n          children: [currentAuthPage === 'login' && /*#__PURE__*/_jsxDEV(LoginForm, {\n            setCurrentAuthPage: setCurrentAuthPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 61\n          }, this), currentAuthPage === 'register' && /*#__PURE__*/_jsxDEV(RegisterForm, {\n            setCurrentAuthPage: setCurrentAuthPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 64\n          }, this), currentAuthPage === 'reset-password' && /*#__PURE__*/_jsxDEV(ResetPasswordForm, {\n            setCurrentAuthPage: setCurrentAuthPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n        // Render main app content if logged in\n        _jsxDEV(_Fragment, {\n          children: [currentPage === 'dashboard' && /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 61\n          }, this), currentPage === 'resumeBuilder' && /*#__PURE__*/_jsxDEV(ResumeBuilder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 65\n          }, this), currentPage === 'coverLetterBuilder' && /*#__PURE__*/_jsxDEV(CoverLetterBuilder, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 70\n          }, this), currentPage === 'templates' && /*#__PURE__*/_jsxDEV(TemplatesPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n        message: message,\n        type: messageType,\n        onClose: closeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n// Header Component\n_s(App, \"od8C3dDZNq13gLuFbdQDiz1PP24=\");\n_c = App;\nconst Header = ({\n  setCurrentPage,\n  onLogout\n}) => {\n  _s2();\n  const {\n    user,\n    userId\n  } = useContext(AppContext); // Access user object from context\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"bg-gradient-to-r from-blue-600 to-indigo-700 p-4 shadow-lg rounded-b-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-white tracking-wider\",\n        children: \"Resume & Cover Letter Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"flex flex-wrap justify-center md:justify-end space-x-2 md:space-x-4\",\n        children: [userId && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentPage('dashboard'),\n          label: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 32\n        }, this), userId && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentPage('resumeBuilder'),\n          label: \"New Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 32\n        }, this), userId && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentPage('coverLetterBuilder'),\n          label: \"New Letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 32\n        }, this), userId && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentPage('templates'),\n          label: \"Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 32\n        }, this), userId ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onLogout,\n          label: \"Logout\",\n          className: \"bg-red-500 text-white hover:bg-red-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCurrentPage('auth'),\n          label: \"Login/Register\",\n          primary: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), user &&\n    /*#__PURE__*/\n    // Display user email if logged in\n    _jsxDEV(\"div\", {\n      className: \"text-center md:text-right text-gray-200 mt-2 text-sm\",\n      children: [\"Logged in as: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-mono text-white\",\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 35\n      }, this), \" (UID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-mono text-white\",\n        children: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 100\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n\n// TemplatesPage component (remains client-side for now, as templates are public data in Firestore)\n_s2(Header, \"ONpb2UVdLpteSyNYTwiAHPAh0c0=\");\n_c2 = Header;\nconst TemplatesPage = () => {\n  _s3();\n  // Note: Templates are still fetched from Firestore's public collection\n  // This is because templates are generally static and public for all users.\n  // If templates needed to be customizable per user or managed by backend,\n  // they would be moved to MySQL and accessed via backend API.\n  const {\n    db,\n    showMessage\n  } = useContext(AppContext);\n  const [templates, setTemplates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!db) return;\n\n    // Ensure auth is defined to access app.options.appId for the path\n    if (!auth || !auth.app || !auth.app.options || !auth.app.options.appId) {\n      console.error(\"Firebase Auth or App ID not available for templates.\");\n      setLoading(false);\n      return;\n    }\n    const templateCollectionRef = collection(db, `artifacts/${auth.app.options.appId}/public/data/templates`);\n    const unsubscribe = onSnapshot(templateCollectionRef, snapshot => {\n      const templatesData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTemplates(templatesData);\n      setLoading(false);\n    }, error => {\n      console.error(\"Error fetching templates:\", error);\n      showMessage(\"Failed to load templates.\", \"error\");\n      setLoading(false);\n    });\n\n    // Initial dummy templates (can be seeded into Firestore directly)\n    const addInitialTemplates = async () => {\n      // Check if collection is empty before adding defaults\n      const existingDocs = await getDocs(templateCollectionRef);\n      if (existingDocs.empty) {\n        const initialTemplates = [{\n          name: \"Classic Professional Resume\",\n          type: \"resume\",\n          description: \"A clean, traditional layout suitable for most industries. Includes sections for contact, summary, experience, education, and skills.\",\n          isPremium: false,\n          imageUrl: \"https://placehold.co/300x400/99e699/000000?text=Basic+Resume\",\n          content: JSON.stringify({\n            structure: [\"contact\", \"summary\", \"experience\", \"education\", \"skills\"],\n            layout: \"two-column\",\n            fonts: \"serif\"\n          })\n        }, {\n          name: \"Modern ATS-Friendly Resume\",\n          type: \"resume\",\n          description: \"Optimized for Applicant Tracking Systems, with a contemporary design and clear headings.\",\n          isPremium: true,\n          imageUrl: \"https://placehold.co/300x400/66b3ff/000000?text=Premium+Resume\",\n          content: JSON.stringify({\n            structure: [\"contact\", \"summary\", \"skills\", \"experience\", \"education\"],\n            layout: \"single-column\",\n            fonts: \"sans-serif\"\n          })\n        }, {\n          name: \"Simple Cover Letter\",\n          type: \"cover_letter\",\n          description: \"A straightforward cover letter format, ideal for direct applications.\",\n          isPremium: false,\n          imageUrl: \"https://placehold.co/300x400/ffcc99/000000?text=Basic+Letter\",\n          content: JSON.stringify({\n            sections: [\"date\", \"your_info\", \"recipient_info\", \"salutation\", \"body\", \"closing\"],\n            tone: \"formal\"\n          })\n        }, {\n          name: \"Dynamic Cover Letter\",\n          type: \"cover_letter\",\n          description: \"A more engaging cover letter structure, designed to capture recruiter attention.\",\n          isPremium: true,\n          imageUrl: \"https://placehold.co/300x400/ff99cc/000000?text=Premium+Letter\",\n          content: JSON.stringify({\n            sections: [\"date\", \"your_info\", \"recipient_info\", \"salutation\", \"body_intro_hook\", \"body_skills_match\", \"body_call_to_action\", \"closing\"],\n            tone: \"persuasive\"\n          })\n        }];\n        for (const template of initialTemplates) {\n          await addDoc(templateCollectionRef, {\n            ...template,\n            createdAt: new Date()\n          });\n        }\n        showMessage(\"Initial templates seeded to Firestore.\", \"info\");\n      }\n    };\n\n    // Delay seeding until auth is ready and db is available\n    const timeoutId = setTimeout(() => {\n      if (db) {\n        addInitialTemplates();\n      }\n    }, 1000); // Small delay to ensure Firebase init\n\n    return () => {\n      unsubscribe();\n      clearTimeout(timeoutId);\n    };\n  }, [db, showMessage]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg\",\n        children: \"Loading templates...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\",\n      children: \"Available Templates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: templates.map(template => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 dark:bg-gray-700 p-5 rounded-lg shadow-md flex flex-col justify-between hover:shadow-xl transition-shadow duration-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: template.imageUrl || `https://placehold.co/300x400/cccccc/000000?text=${template.type.toUpperCase()}`,\n            alt: template.name,\n            className: \"w-full h-48 object-cover rounded-md mb-4 border border-gray-200 dark:border-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold text-gray-800 dark:text-gray-100 mb-2\",\n            children: template.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 dark:text-gray-300 mb-3\",\n            children: template.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex flex-col space-y-2\",\n          children: [template.isPremium ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4 mr-1\",\n              fill: \"currentColor\",\n              viewBox: \"0 0 20 20\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fillRule: \"evenodd\",\n                d: \"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\",\n                clipRule: \"evenodd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 142\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this), \"Premium\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\",\n            children: \"Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Use Template\",\n            onClick: () => showMessage(`Using \"${template.name}\" (feature under development). You would be redirected to builder.`, \"info\"),\n            primary: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this)]\n      }, template.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, this);\n};\n_s3(TemplatesPage, \"bQNof/t6Nxx9mPmAFzHRIS+Qdp0=\");\n_c3 = TemplatesPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"TemplatesPage\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","auth","db","onAuthStateChanged","signOut","api","collection","onSnapshot","addDoc","getDocs","InputField","TextAreaField","Button","MessageBox","LoginForm","RegisterForm","ResetPasswordForm","Dashboard","ResumeBuilder","CoverLetterBuilder","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContext","App","_s","user","setUser","userId","setUserId","loadingAuth","setLoadingAuth","currentPage","setCurrentPage","currentAuthPage","setCurrentAuthPage","selectedDocId","setSelectedDocId","message","setMessage","messageType","setMessageType","showMessage","msg","type","closeMessage","unsubscribe","firebaseUser","idToken","getIdToken","response","post","headers","Authorization","console","log","data","uid","email","error","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","Header","onLogout","TemplatesPage","onClose","_c","_s2","onClick","label","primary","_c2","_s3","templates","setTemplates","loading","setLoading","app","options","appId","templateCollectionRef","snapshot","templatesData","docs","map","doc","id","addInitialTemplates","existingDocs","empty","initialTemplates","name","description","isPremium","imageUrl","content","JSON","stringify","structure","layout","fonts","sections","tone","template","createdAt","Date","timeoutId","setTimeout","clearTimeout","src","toUpperCase","alt","fill","viewBox","xmlns","fillRule","d","clipRule","_c3","$RefreshReg$"],"sources":["/home/sam_dev/Projects/resume-app/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { auth, db } from './services/firebase'; // Firebase client SDK\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport api from './services/api'; // Our Axios instance for backend calls\nimport { collection, onSnapshot, addDoc, getDocs } from 'firebase/firestore'; // For TemplatesPage using Firestore\n\n// Import UI Components from common\nimport { InputField, TextAreaField, Button, MessageBox } from './components/common';\n\n// Import Page Components\nimport LoginForm from './pages/Login';\nimport RegisterForm from './pages/Register';\nimport ResetPasswordForm from './pages/ResetPassword';\nimport Dashboard from './pages/Home'; // Dashboard (Home)\nimport ResumeBuilder from './pages/ResumeBuilder';\nimport CoverLetterBuilder from './pages/LetterBuilder'; // Cover Letter Builder\n\n// Define context for global application state\nexport const AppContext = createContext(null); // Export AppContext for use in other components\n\n// Main App Component\nconst App = () => {\n    const [user, setUser] = useState(null); // Firebase User object\n    const [userId, setUserId] = useState(null); // Firebase UID (string)\n    const [loadingAuth, setLoadingAuth] = useState(true); // To indicate if auth state is resolving\n    const [currentPage, setCurrentPage] = useState('dashboard'); // 'dashboard', 'resumeBuilder', 'coverLetterBuilder', 'templates'\n    const [currentAuthPage, setCurrentAuthPage] = useState('login'); // 'login', 'register', 'reset-password'\n    const [selectedDocId, setSelectedDocId] = useState(null); // For editing existing documents\n\n    // State for message box\n    const [message, setMessage] = useState('');\n    const [messageType, setMessageType] = useState('info');\n\n    // Show a message to the user\n    const showMessage = (msg, type = 'info') => {\n        setMessage(msg);\n        setMessageType(type);\n    };\n\n    // Close the message box\n    const closeMessage = () => {\n        setMessage('');\n    };\n\n    // Listen for Firebase Auth state changes\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n            if (firebaseUser) {\n                // User is signed in with Firebase.\n                // Now, get their ID token and sync with our backend.\n                try {\n                    const idToken = await firebaseUser.getIdToken();\n                    // Send ID token to your backend to sync user data in MySQL\n                    const response = await api.post('/auth/sync-user', {}, {\n                        headers: { Authorization: `Bearer ${idToken}` }\n                    });\n                    console.log('User synced with backend:', response.data);\n\n                    setUser(firebaseUser);\n                    setUserId(firebaseUser.uid);\n                    showMessage(`Logged in as ${firebaseUser.email}!`, 'success');\n                    setCurrentPage('dashboard'); // Redirect to dashboard on successful login/sync\n                } catch (error) {\n                    console.error('Error syncing user with backend:', error);\n                    showMessage(`Failed to sync user with backend: ${error.message}`, 'error');\n                    // If sync fails, consider logging out the user or restricting access\n                    await signOut(auth);\n                    setUser(null);\n                    setUserId(null);\n                    setCurrentPage('auth'); // Show auth forms on sync failure\n                }\n            } else {\n                // User is signed out or no user is logged in\n                setUser(null);\n                setUserId(null);\n                // Redirect to login form if not authenticated\n                setCurrentPage('auth'); // A special page to render auth forms\n            }\n            setLoadingAuth(false);\n        });\n\n        // Cleanup subscription on component unmount\n        return () => unsubscribe();\n    }, []); // Empty dependency array means this runs once on mount/unmount\n\n    const handleLogout = async () => {\n        try {\n            await signOut(auth);\n            // onAuthStateChanged listener will handle updating user state and redirecting\n            showMessage('Logged out successfully.', 'info');\n        } catch (error) {\n            console.error('Logout error:', error);\n            showMessage(`Logout failed: ${error.message}`, 'error');\n        }\n    };\n\n    // Conditional rendering based on authentication loading state\n    if (loadingAuth) {\n        return (\n            <div className=\"flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900\">\n                <div className=\"text-xl text-gray-700 dark:text-gray-300\">Loading application...</div>\n            </div>\n        );\n    }\n\n    return (\n        <AppContext.Provider value={{ user, userId, db, auth, showMessage, selectedDocId, setSelectedDocId, setCurrentPage }}>\n            <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 font-inter flex flex-col\">\n                <Header setCurrentPage={setCurrentPage} onLogout={handleLogout} />\n                <main className=\"flex-grow container mx-auto p-4 md:p-6 lg:p-8 flex flex-col\">\n                    {/* Render Auth forms if not logged in OR if 'auth' page is explicitly set */}\n                    {!userId || currentPage === 'auth' ? (\n                        <div className=\"flex flex-grow items-center justify-center\">\n                            {currentAuthPage === 'login' && <LoginForm setCurrentAuthPage={setCurrentAuthPage} />}\n                            {currentAuthPage === 'register' && <RegisterForm setCurrentAuthPage={setCurrentAuthPage} />}\n                            {currentAuthPage === 'reset-password' && <ResetPasswordForm setCurrentAuthPage={setCurrentAuthPage} />}\n                        </div>\n                    ) : (\n                        // Render main app content if logged in\n                        <>\n                            {currentPage === 'dashboard' && <Dashboard />}\n                            {currentPage === 'resumeBuilder' && <ResumeBuilder />}\n                            {currentPage === 'coverLetterBuilder' && <CoverLetterBuilder />}\n                            {currentPage === 'templates' && <TemplatesPage />}\n                        </>\n                    )}\n                </main>\n                <MessageBox message={message} type={messageType} onClose={closeMessage} />\n            </div>\n        </AppContext.Provider>\n    );\n};\n\n// Header Component\nconst Header = ({ setCurrentPage, onLogout }) => {\n    const { user, userId } = useContext(AppContext); // Access user object from context\n    return (\n        <header className=\"bg-gradient-to-r from-blue-600 to-indigo-700 p-4 shadow-lg rounded-b-xl\">\n            <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n                <h1 className=\"text-3xl font-bold text-white tracking-wider\">\n                    Resume & Cover Letter Pro\n                </h1>\n                <nav className=\"flex flex-wrap justify-center md:justify-end space-x-2 md:space-x-4\">\n                    {userId && <Button onClick={() => setCurrentPage('dashboard')} label=\"Dashboard\" />}\n                    {userId && <Button onClick={() => setCurrentPage('resumeBuilder')} label=\"New Resume\" />}\n                    {userId && <Button onClick={() => setCurrentPage('coverLetterBuilder')} label=\"New Letter\" />}\n                    {userId && <Button onClick={() => setCurrentPage('templates')} label=\"Templates\" />}\n                    {userId ? (\n                        <Button onClick={onLogout} label=\"Logout\" className=\"bg-red-500 text-white hover:bg-red-600\" />\n                    ) : (\n                        <Button onClick={() => setCurrentPage('auth')} label=\"Login/Register\" primary />\n                    )}\n                </nav>\n            </div>\n            {user && ( // Display user email if logged in\n                <div className=\"text-center md:text-right text-gray-200 mt-2 text-sm\">\n                    Logged in as: <span className=\"font-mono text-white\">{user.email}</span> (UID: <span className=\"font-mono text-white\">{userId}</span>)\n                </div>\n            )}\n        </header>\n    );\n};\n\n\n// TemplatesPage component (remains client-side for now, as templates are public data in Firestore)\nconst TemplatesPage = () => {\n    // Note: Templates are still fetched from Firestore's public collection\n    // This is because templates are generally static and public for all users.\n    // If templates needed to be customizable per user or managed by backend,\n    // they would be moved to MySQL and accessed via backend API.\n    const { db, showMessage } = useContext(AppContext);\n    const [templates, setTemplates] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (!db) return;\n\n        // Ensure auth is defined to access app.options.appId for the path\n        if (!auth || !auth.app || !auth.app.options || !auth.app.options.appId) {\n            console.error(\"Firebase Auth or App ID not available for templates.\");\n            setLoading(false);\n            return;\n        }\n\n        const templateCollectionRef = collection(db, `artifacts/${auth.app.options.appId}/public/data/templates`);\n        const unsubscribe = onSnapshot(templateCollectionRef, (snapshot) => {\n            const templatesData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n            setTemplates(templatesData);\n            setLoading(false);\n        }, (error) => {\n            console.error(\"Error fetching templates:\", error);\n            showMessage(\"Failed to load templates.\", \"error\");\n            setLoading(false);\n        });\n\n        // Initial dummy templates (can be seeded into Firestore directly)\n        const addInitialTemplates = async () => {\n            // Check if collection is empty before adding defaults\n            const existingDocs = await getDocs(templateCollectionRef);\n            if (existingDocs.empty) {\n                const initialTemplates = [\n                    {\n                        name: \"Classic Professional Resume\",\n                        type: \"resume\",\n                        description: \"A clean, traditional layout suitable for most industries. Includes sections for contact, summary, experience, education, and skills.\",\n                        isPremium: false,\n                        imageUrl: \"https://placehold.co/300x400/99e699/000000?text=Basic+Resume\",\n                        content: JSON.stringify({\n                            structure: [\"contact\", \"summary\", \"experience\", \"education\", \"skills\"],\n                            layout: \"two-column\",\n                            fonts: \"serif\"\n                        })\n                    },\n                    {\n                        name: \"Modern ATS-Friendly Resume\",\n                        type: \"resume\",\n                        description: \"Optimized for Applicant Tracking Systems, with a contemporary design and clear headings.\",\n                        isPremium: true,\n                        imageUrl: \"https://placehold.co/300x400/66b3ff/000000?text=Premium+Resume\",\n                        content: JSON.stringify({\n                            structure: [\"contact\", \"summary\", \"skills\", \"experience\", \"education\"],\n                            layout: \"single-column\",\n                            fonts: \"sans-serif\"\n                        })\n                    },\n                    {\n                        name: \"Simple Cover Letter\",\n                        type: \"cover_letter\",\n                        description: \"A straightforward cover letter format, ideal for direct applications.\",\n                        isPremium: false,\n                        imageUrl: \"https://placehold.co/300x400/ffcc99/000000?text=Basic+Letter\",\n                        content: JSON.stringify({\n                            sections: [\"date\", \"your_info\", \"recipient_info\", \"salutation\", \"body\", \"closing\"],\n                            tone: \"formal\"\n                        })\n                    },\n                    {\n                        name: \"Dynamic Cover Letter\",\n                        type: \"cover_letter\",\n                        description: \"A more engaging cover letter structure, designed to capture recruiter attention.\",\n                        isPremium: true,\n                        imageUrl: \"https://placehold.co/300x400/ff99cc/000000?text=Premium+Letter\",\n                        content: JSON.stringify({\n                            sections: [\"date\", \"your_info\", \"recipient_info\", \"salutation\", \"body_intro_hook\", \"body_skills_match\", \"body_call_to_action\", \"closing\"],\n                            tone: \"persuasive\"\n                        })\n                    }\n                ];\n\n                for (const template of initialTemplates) {\n                    await addDoc(templateCollectionRef, { ...template, createdAt: new Date() });\n                }\n                showMessage(\"Initial templates seeded to Firestore.\", \"info\");\n            }\n        };\n\n        // Delay seeding until auth is ready and db is available\n        const timeoutId = setTimeout(() => {\n            if (db) {\n                addInitialTemplates();\n            }\n        }, 1000); // Small delay to ensure Firebase init\n\n        return () => {\n            unsubscribe();\n            clearTimeout(timeoutId);\n        };\n    }, [db, showMessage]);\n\n\n    if (loading) {\n        return (\n            <div className=\"flex justify-center items-center h-64\">\n                <p className=\"text-lg\">Loading templates...</p>\n            </div>\n        );\n    }\n\n    return (\n        <section className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg mb-8\">\n            <h2 className=\"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\">Available Templates</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {templates.map(template => (\n                    <div key={template.id} className=\"bg-gray-50 dark:bg-gray-700 p-5 rounded-lg shadow-md flex flex-col justify-between hover:shadow-xl transition-shadow duration-300\">\n                        <div>\n                            <img src={template.imageUrl || `https://placehold.co/300x400/cccccc/000000?text=${template.type.toUpperCase()}`} alt={template.name} className=\"w-full h-48 object-cover rounded-md mb-4 border border-gray-200 dark:border-gray-600\" />\n                            <h3 className=\"text-xl font-bold text-gray-800 dark:text-gray-100 mb-2\">{template.name}</h3>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-3\">{template.description}</p>\n                        </div>\n                        <div className=\"mt-4 flex flex-col space-y-2\">\n                            {template.isPremium ? (\n                                <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300\">\n                                    <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clipRule=\"evenodd\"></path></svg>\n                                    Premium\n                                </span>\n                            ) : (\n                                <span className=\"inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300\">\n                                    Free\n                                </span>\n                            )}\n                            <Button label=\"Use Template\" onClick={() => showMessage(`Using \"${template.name}\" (feature under development). You would be redirected to builder.`, \"info\")} primary />\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </section>\n    );\n};\n"],"mappings":";;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,IAAI,EAAEC,EAAE,QAAQ,qBAAqB,CAAC,CAAC;AAChD,SAASC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AAC3D,OAAOC,GAAG,MAAM,gBAAgB,CAAC,CAAC;AAClC,SAASC,UAAU,EAAEC,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB,CAAC,CAAC;;AAE9E;AACA,SAASC,UAAU,EAAEC,aAAa,EAAEC,MAAM,EAAEC,UAAU,QAAQ,qBAAqB;;AAEnF;AACA,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,iBAAiB,MAAM,uBAAuB;AACrD,OAAOC,SAAS,MAAM,cAAc,CAAC,CAAC;AACtC,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,kBAAkB,MAAM,uBAAuB,CAAC,CAAC;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAO,MAAMC,UAAU,gBAAGzB,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;;AAE/C;AACA,MAAM0B,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACoC,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EACjE,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,MAAM,CAAC;;EAEtD;EACA,MAAM8C,WAAW,GAAGA,CAACC,GAAG,EAAEC,IAAI,GAAG,MAAM,KAAK;IACxCL,UAAU,CAACI,GAAG,CAAC;IACfF,cAAc,CAACG,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBN,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACA1C,SAAS,CAAC,MAAM;IACZ,MAAMiD,WAAW,GAAG5C,kBAAkB,CAACF,IAAI,EAAE,MAAO+C,YAAY,IAAK;MACjE,IAAIA,YAAY,EAAE;QACd;QACA;QACA,IAAI;UACA,MAAMC,OAAO,GAAG,MAAMD,YAAY,CAACE,UAAU,CAAC,CAAC;UAC/C;UACA,MAAMC,QAAQ,GAAG,MAAM9C,GAAG,CAAC+C,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE;YACnDC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUL,OAAO;YAAG;UAClD,CAAC,CAAC;UACFM,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEL,QAAQ,CAACM,IAAI,CAAC;UAEvD7B,OAAO,CAACoB,YAAY,CAAC;UACrBlB,SAAS,CAACkB,YAAY,CAACU,GAAG,CAAC;UAC3Bf,WAAW,CAAC,gBAAgBK,YAAY,CAACW,KAAK,GAAG,EAAE,SAAS,CAAC;UAC7DzB,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,OAAO0B,KAAK,EAAE;UACZL,OAAO,CAACK,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;UACxDjB,WAAW,CAAC,qCAAqCiB,KAAK,CAACrB,OAAO,EAAE,EAAE,OAAO,CAAC;UAC1E;UACA,MAAMnC,OAAO,CAACH,IAAI,CAAC;UACnB2B,OAAO,CAAC,IAAI,CAAC;UACbE,SAAS,CAAC,IAAI,CAAC;UACfI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5B;MACJ,CAAC,MAAM;QACH;QACAN,OAAO,CAAC,IAAI,CAAC;QACbE,SAAS,CAAC,IAAI,CAAC;QACf;QACAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;MAC5B;MACAF,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMe,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMzD,OAAO,CAACH,IAAI,CAAC;MACnB;MACA0C,WAAW,CAAC,0BAA0B,EAAE,MAAM,CAAC;IACnD,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCjB,WAAW,CAAC,kBAAkBiB,KAAK,CAACrB,OAAO,EAAE,EAAE,OAAO,CAAC;IAC3D;EACJ,CAAC;;EAED;EACA,IAAIR,WAAW,EAAE;IACb,oBACIV,OAAA;MAAKyC,SAAS,EAAC,4EAA4E;MAAAC,QAAA,eACvF1C,OAAA;QAAKyC,SAAS,EAAC,0CAA0C;QAAAC,QAAA,EAAC;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAEd;EAEA,oBACI9C,OAAA,CAACG,UAAU,CAAC4C,QAAQ;IAACC,KAAK,EAAE;MAAE1C,IAAI;MAAEE,MAAM;MAAE3B,EAAE;MAAED,IAAI;MAAE0C,WAAW;MAAEN,aAAa;MAAEC,gBAAgB;MAAEJ;IAAe,CAAE;IAAA6B,QAAA,eACjH1C,OAAA;MAAKyC,SAAS,EAAC,qGAAqG;MAAAC,QAAA,gBAChH1C,OAAA,CAACiD,MAAM;QAACpC,cAAc,EAAEA,cAAe;QAACqC,QAAQ,EAAEV;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClE9C,OAAA;QAAMyC,SAAS,EAAC,6DAA6D;QAAAC,QAAA,EAExE,CAAClC,MAAM,IAAII,WAAW,KAAK,MAAM,gBAC9BZ,OAAA;UAAKyC,SAAS,EAAC,4CAA4C;UAAAC,QAAA,GACtD5B,eAAe,KAAK,OAAO,iBAAId,OAAA,CAACP,SAAS;YAACsB,kBAAkB,EAAEA;UAAmB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACpFhC,eAAe,KAAK,UAAU,iBAAId,OAAA,CAACN,YAAY;YAACqB,kBAAkB,EAAEA;UAAmB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC1FhC,eAAe,KAAK,gBAAgB,iBAAId,OAAA,CAACL,iBAAiB;YAACoB,kBAAkB,EAAEA;UAAmB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrG,CAAC;QAAA;QAEN;QACA9C,OAAA,CAAAE,SAAA;UAAAwC,QAAA,GACK9B,WAAW,KAAK,WAAW,iBAAIZ,OAAA,CAACJ,SAAS;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC5ClC,WAAW,KAAK,eAAe,iBAAIZ,OAAA,CAACH,aAAa;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EACpDlC,WAAW,KAAK,oBAAoB,iBAAIZ,OAAA,CAACF,kBAAkB;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC9DlC,WAAW,KAAK,WAAW,iBAAIZ,OAAA,CAACmD,aAAa;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eACnD;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACP9C,OAAA,CAACR,UAAU;QAAC0B,OAAO,EAAEA,OAAQ;QAACM,IAAI,EAAEJ,WAAY;QAACgC,OAAO,EAAE3B;MAAa;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE9B,CAAC;;AAED;AAAAzC,EAAA,CAhHMD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAiHT,MAAM6C,MAAM,GAAGA,CAAC;EAAEpC,cAAc;EAAEqC;AAAS,CAAC,KAAK;EAAAI,GAAA;EAC7C,MAAM;IAAEhD,IAAI;IAAEE;EAAO,CAAC,GAAG7B,UAAU,CAACwB,UAAU,CAAC,CAAC,CAAC;EACjD,oBACIH,OAAA;IAAQyC,SAAS,EAAC,yEAAyE;IAAAC,QAAA,gBACvF1C,OAAA;MAAKyC,SAAS,EAAC,iGAAiG;MAAAC,QAAA,gBAC5G1C,OAAA;QAAIyC,SAAS,EAAC,8CAA8C;QAAAC,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL9C,OAAA;QAAKyC,SAAS,EAAC,qEAAqE;QAAAC,QAAA,GAC/ElC,MAAM,iBAAIR,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAAC,WAAW,CAAE;UAAC2C,KAAK,EAAC;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClFtC,MAAM,iBAAIR,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAAC,eAAe,CAAE;UAAC2C,KAAK,EAAC;QAAY;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACvFtC,MAAM,iBAAIR,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAAC,oBAAoB,CAAE;UAAC2C,KAAK,EAAC;QAAY;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC5FtC,MAAM,iBAAIR,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAAC,WAAW,CAAE;UAAC2C,KAAK,EAAC;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAClFtC,MAAM,gBACHR,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEL,QAAS;UAACM,KAAK,EAAC,QAAQ;UAACf,SAAS,EAAC;QAAwC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE/F9C,OAAA,CAACT,MAAM;UAACgE,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAAC,MAAM,CAAE;UAAC2C,KAAK,EAAC,gBAAgB;UAACC,OAAO;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAClF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLxC,IAAI;IAAA;IAAM;IACPN,OAAA;MAAKyC,SAAS,EAAC,sDAAsD;MAAAC,QAAA,GAAC,gBACpD,eAAA1C,OAAA;QAAMyC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAEpC,IAAI,CAACgC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,WAAO,eAAA9C,OAAA;QAAMyC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAElC;MAAM;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KACzI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB,CAAC;;AAGD;AAAAQ,GAAA,CA9BML,MAAM;AAAAS,GAAA,GAANT,MAAM;AA+BZ,MAAME,aAAa,GAAGA,CAAA,KAAM;EAAAQ,GAAA;EACxB;EACA;EACA;EACA;EACA,MAAM;IAAE9E,EAAE;IAAEyC;EAAY,CAAC,GAAG3C,UAAU,CAACwB,UAAU,CAAC;EAClD,MAAM,CAACyD,SAAS,EAAEC,YAAY,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsF,OAAO,EAAEC,UAAU,CAAC,GAAGvF,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,EAAE,EAAE;;IAET;IACA,IAAI,CAACD,IAAI,IAAI,CAACA,IAAI,CAACoF,GAAG,IAAI,CAACpF,IAAI,CAACoF,GAAG,CAACC,OAAO,IAAI,CAACrF,IAAI,CAACoF,GAAG,CAACC,OAAO,CAACC,KAAK,EAAE;MACpEhC,OAAO,CAACK,KAAK,CAAC,sDAAsD,CAAC;MACrEwB,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ;IAEA,MAAMI,qBAAqB,GAAGlF,UAAU,CAACJ,EAAE,EAAE,aAAaD,IAAI,CAACoF,GAAG,CAACC,OAAO,CAACC,KAAK,wBAAwB,CAAC;IACzG,MAAMxC,WAAW,GAAGxC,UAAU,CAACiF,qBAAqB,EAAGC,QAAQ,IAAK;MAChE,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;QAAEC,EAAE,EAAED,GAAG,CAACC,EAAE;QAAE,GAAGD,GAAG,CAACpC,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MAC/EyB,YAAY,CAACQ,aAAa,CAAC;MAC3BN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,EAAGxB,KAAK,IAAK;MACVL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDjB,WAAW,CAAC,2BAA2B,EAAE,OAAO,CAAC;MACjDyC,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;;IAEF;IACA,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC;MACA,MAAMC,YAAY,GAAG,MAAMvF,OAAO,CAAC+E,qBAAqB,CAAC;MACzD,IAAIQ,YAAY,CAACC,KAAK,EAAE;QACpB,MAAMC,gBAAgB,GAAG,CACrB;UACIC,IAAI,EAAE,6BAA6B;UACnCtD,IAAI,EAAE,QAAQ;UACduD,WAAW,EAAE,sIAAsI;UACnJC,SAAS,EAAE,KAAK;UAChBC,QAAQ,EAAE,8DAA8D;UACxEC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;YACpBC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,QAAQ,CAAC;YACtEC,MAAM,EAAE,YAAY;YACpBC,KAAK,EAAE;UACX,CAAC;QACL,CAAC,EACD;UACIT,IAAI,EAAE,4BAA4B;UAClCtD,IAAI,EAAE,QAAQ;UACduD,WAAW,EAAE,0FAA0F;UACvGC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAE,gEAAgE;UAC1EC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;YACpBC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,WAAW,CAAC;YACtEC,MAAM,EAAE,eAAe;YACvBC,KAAK,EAAE;UACX,CAAC;QACL,CAAC,EACD;UACIT,IAAI,EAAE,qBAAqB;UAC3BtD,IAAI,EAAE,cAAc;UACpBuD,WAAW,EAAE,uEAAuE;UACpFC,SAAS,EAAE,KAAK;UAChBC,QAAQ,EAAE,8DAA8D;UACxEC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;YACpBI,QAAQ,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,CAAC;YAClFC,IAAI,EAAE;UACV,CAAC;QACL,CAAC,EACD;UACIX,IAAI,EAAE,sBAAsB;UAC5BtD,IAAI,EAAE,cAAc;UACpBuD,WAAW,EAAE,kFAAkF;UAC/FC,SAAS,EAAE,IAAI;UACfC,QAAQ,EAAE,gEAAgE;UAC1EC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAC;YACpBI,QAAQ,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,SAAS,CAAC;YACzIC,IAAI,EAAE;UACV,CAAC;QACL,CAAC,CACJ;QAED,KAAK,MAAMC,QAAQ,IAAIb,gBAAgB,EAAE;UACrC,MAAM1F,MAAM,CAACgF,qBAAqB,EAAE;YAAE,GAAGuB,QAAQ;YAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC;UAAE,CAAC,CAAC;QAC/E;QACAtE,WAAW,CAAC,wCAAwC,EAAE,MAAM,CAAC;MACjE;IACJ,CAAC;;IAED;IACA,MAAMuE,SAAS,GAAGC,UAAU,CAAC,MAAM;MAC/B,IAAIjH,EAAE,EAAE;QACJ6F,mBAAmB,CAAC,CAAC;MACzB;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAM;MACThD,WAAW,CAAC,CAAC;MACbqE,YAAY,CAACF,SAAS,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,CAAChH,EAAE,EAAEyC,WAAW,CAAC,CAAC;EAGrB,IAAIwC,OAAO,EAAE;IACT,oBACI9D,OAAA;MAAKyC,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eAClD1C,OAAA;QAAGyC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEd;EAEA,oBACI9C,OAAA;IAASyC,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBACxE1C,OAAA;MAAIyC,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjH9C,OAAA;MAAKyC,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAChEkB,SAAS,CAACW,GAAG,CAACmB,QAAQ,iBACnB1F,OAAA;QAAuByC,SAAS,EAAC,mIAAmI;QAAAC,QAAA,gBAChK1C,OAAA;UAAA0C,QAAA,gBACI1C,OAAA;YAAKgG,GAAG,EAAEN,QAAQ,CAACT,QAAQ,IAAI,mDAAmDS,QAAQ,CAAClE,IAAI,CAACyE,WAAW,CAAC,CAAC,EAAG;YAACC,GAAG,EAAER,QAAQ,CAACZ,IAAK;YAACrC,SAAS,EAAC;UAAsF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxO9C,OAAA;YAAIyC,SAAS,EAAC,yDAAyD;YAAAC,QAAA,EAAEgD,QAAQ,CAACZ;UAAI;YAAAnC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5F9C,OAAA;YAAGyC,SAAS,EAAC,+CAA+C;YAAAC,QAAA,EAAEgD,QAAQ,CAACX;UAAW;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,eACN9C,OAAA;UAAKyC,SAAS,EAAC,8BAA8B;UAAAC,QAAA,GACxCgD,QAAQ,CAACV,SAAS,gBACfhF,OAAA;YAAMyC,SAAS,EAAC,2IAA2I;YAAAC,QAAA,gBACvJ1C,OAAA;cAAKyC,SAAS,EAAC,cAAc;cAAC0D,IAAI,EAAC,cAAc;cAACC,OAAO,EAAC,WAAW;cAACC,KAAK,EAAC,4BAA4B;cAAA3D,QAAA,eAAC1C,OAAA;gBAAMsG,QAAQ,EAAC,SAAS;gBAACC,CAAC,EAAC,wGAAwG;gBAACC,QAAQ,EAAC;cAAS;gBAAA7D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,WAEjR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,gBAEP9C,OAAA;YAAMyC,SAAS,EAAC,mIAAmI;YAAAC,QAAA,EAAC;UAEpJ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACT,eACD9C,OAAA,CAACT,MAAM;YAACiE,KAAK,EAAC,cAAc;YAACD,OAAO,EAAEA,CAAA,KAAMjC,WAAW,CAAC,UAAUoE,QAAQ,CAACZ,IAAI,oEAAoE,EAAE,MAAM,CAAE;YAACrB,OAAO;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvK,CAAC;MAAA,GAlBA4C,QAAQ,CAACjB,EAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBhB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAACa,GAAA,CA9IIR,aAAa;AAAAsD,GAAA,GAAbtD,aAAa;AAAA,IAAAE,EAAA,EAAAK,GAAA,EAAA+C,GAAA;AAAAC,YAAA,CAAArD,EAAA;AAAAqD,YAAA,CAAAhD,GAAA;AAAAgD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}