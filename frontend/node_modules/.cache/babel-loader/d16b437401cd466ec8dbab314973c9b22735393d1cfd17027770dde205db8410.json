{"ast":null,"code":"var _jsxFileName = \"/home/sam_dev/Projects/resume-app/frontend/src/pages/Register.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Register.js\nimport React, { useState, useContext } from 'react';\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'; // Import updateProfile\nimport { auth } from '../services/firebase';\nimport { AppContext } from '../App';\nimport { InputField, Button } from '../components/common';\nimport api from '../services/api'; // Import api for backend sync\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = ({\n  setCurrentAuthPage\n}) => {\n  _s();\n  const {\n    showMessage,\n    setCurrentPage\n  } = useContext(AppContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(''); // New state for first name\n  const [lastName, setLastName] = useState(''); // New state for last name\n  const [loading, setLoading] = useState(false);\n  const validatePassword = pass => {\n    if (pass.length < 6) {\n      return \"Password must be at least 6 characters long.\";\n    }\n    return null;\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const passwordError = validatePassword(password);\n    if (passwordError) {\n      showMessage(passwordError, 'error');\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmPassword) {\n      showMessage('Passwords do not match!', 'error');\n      setLoading(false);\n      return;\n    }\n    try {\n      // 1. Create user with Email and Password in Firebase Auth\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const firebaseUser = userCredential.user;\n\n      // 2. Update Firebase user profile with display name (combining first and last name)\n      const fullName = `${firstName} ${lastName}`.trim();\n      if (fullName) {\n        await updateProfile(firebaseUser, {\n          displayName: fullName\n        });\n      }\n\n      // 3. Get ID token and sync user data (including names) with your backend\n      const idToken = await firebaseUser.getIdToken();\n      await api.post('/auth/sync-user', {\n        email: firebaseUser.email,\n        // Send email explicitly for backend to verify or use\n        firstName: firstName,\n        lastName: lastName\n      }, {\n        headers: {\n          Authorization: `Bearer ${idToken}`\n        }\n      });\n      showMessage('Registration successful! You are now logged in.', 'success');\n      setCurrentPage('dashboard'); // Redirect to dashboard on successful registration\n    } catch (error) {\n      console.error('Registration error:', error);\n      showMessage(`Registration failed: ${error.message}`, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg w-full max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Email\",\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"your.email@example.com\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"First Name\",\n        type: \"text\",\n        name: \"firstName\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        placeholder: \"John\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Last Name\",\n        type: \"text\",\n        name: \"lastName\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        placeholder: \"Doe\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"********\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Confirm Password\",\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: \"********\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: loading ? 'Registering...' : 'Register',\n        type: \"submit\",\n        primary: true,\n        className: \"w-full\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-center text-gray-600 dark:text-gray-300\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => setCurrentAuthPage('login'),\n          className: \"text-blue-500 hover:underline\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"uZ5JoMUnRN4zD9JEFDt4T+oWG0E=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useContext","createUserWithEmailAndPassword","updateProfile","auth","AppContext","InputField","Button","api","jsxDEV","_jsxDEV","RegisterForm","setCurrentAuthPage","_s","showMessage","setCurrentPage","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","loading","setLoading","validatePassword","pass","length","handleRegister","e","preventDefault","passwordError","userCredential","firebaseUser","user","fullName","trim","displayName","idToken","getIdToken","post","headers","Authorization","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","type","name","value","onChange","target","placeholder","required","primary","disabled","href","onClick","_c","$RefreshReg$"],"sources":["/home/sam_dev/Projects/resume-app/frontend/src/pages/Register.js"],"sourcesContent":["// frontend/src/pages/Register.js\nimport React, { useState, useContext } from 'react';\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'; // Import updateProfile\nimport { auth } from '../services/firebase';\nimport { AppContext } from '../App';\nimport { InputField, Button } from '../components/common';\nimport api from '../services/api'; // Import api for backend sync\n\nconst RegisterForm = ({ setCurrentAuthPage }) => {\n    const { showMessage, setCurrentPage } = useContext(AppContext);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState(''); // New state for first name\n    const [lastName, setLastName] = useState('');  // New state for last name\n    const [loading, setLoading] = useState(false);\n\n    const validatePassword = (pass) => {\n        if (pass.length < 6) {\n            return \"Password must be at least 6 characters long.\";\n        }\n        return null;\n    };\n\n    const handleRegister = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        const passwordError = validatePassword(password);\n        if (passwordError) {\n            showMessage(passwordError, 'error');\n            setLoading(false);\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            showMessage('Passwords do not match!', 'error');\n            setLoading(false);\n            return;\n        }\n\n        try {\n            // 1. Create user with Email and Password in Firebase Auth\n            const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n            const firebaseUser = userCredential.user;\n\n            // 2. Update Firebase user profile with display name (combining first and last name)\n            const fullName = `${firstName} ${lastName}`.trim();\n            if (fullName) {\n                await updateProfile(firebaseUser, { displayName: fullName });\n            }\n\n            // 3. Get ID token and sync user data (including names) with your backend\n            const idToken = await firebaseUser.getIdToken();\n            await api.post('/auth/sync-user', {\n                email: firebaseUser.email, // Send email explicitly for backend to verify or use\n                firstName: firstName,\n                lastName: lastName\n            }, {\n                headers: { Authorization: `Bearer ${idToken}` }\n            });\n\n            showMessage('Registration successful! You are now logged in.', 'success');\n            setCurrentPage('dashboard'); // Redirect to dashboard on successful registration\n        } catch (error) {\n            console.error('Registration error:', error);\n            showMessage(`Registration failed: ${error.message}`, 'error');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"bg-white dark:bg-gray-800 p-8 rounded-xl shadow-lg w-full max-w-md mx-auto\">\n            <h2 className=\"text-3xl font-semibold mb-6 text-center text-blue-600 dark:text-blue-400\">Register</h2>\n            <form onSubmit={handleRegister} className=\"space-y-4\">\n                <InputField\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"your.email@example.com\"\n                    required\n                />\n                <InputField\n                    label=\"First Name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    placeholder=\"John\"\n                    required\n                />\n                <InputField\n                    label=\"Last Name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    placeholder=\"Doe\"\n                    required\n                />\n                <InputField\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"********\"\n                    required\n                />\n                <InputField\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    placeholder=\"********\"\n                    required\n                />\n                <Button label={loading ? 'Registering...' : 'Register'} type=\"submit\" primary className=\"w-full\" disabled={loading} />\n            </form>\n            <div className=\"mt-6 text-center text-gray-600 dark:text-gray-300\">\n                <p>Already have an account? <a href=\"#\" onClick={() => setCurrentAuthPage('login')} className=\"text-blue-500 hover:underline\">Login here</a></p>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}